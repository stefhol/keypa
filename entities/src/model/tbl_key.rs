//! SeaORM Entity. Generated by sea-orm-codegen 0.9.2

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Serialize, Deserialize)]
#[sea_orm(table_name = "tbl_key")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub key_id: Uuid,
    pub name: String,
    pub value: String,
    #[sea_orm(column_type = "Text", nullable)]
    pub description: Option<String>,
    pub door_id: Uuid,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::tbl_door::Entity",
        from = "Column::DoorId",
        to = "super::tbl_door::Column::DoorId",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    TblDoor,
    #[sea_orm(has_many = "super::tbl_key_group_key::Entity")]
    TblKeyGroupKey,
    #[sea_orm(has_many = "super::tbl_key_user_history::Entity")]
    TblKeyUserHistory,
}

impl Related<super::tbl_door::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::TblDoor.def()
    }
}

impl Related<super::tbl_key_group_key::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::TblKeyGroupKey.def()
    }
}

impl Related<super::tbl_key_user_history::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::TblKeyUserHistory.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
