//! SeaORM Entity. Generated by sea-orm-codegen 0.9.2

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Serialize, Deserialize)]
#[sea_orm(table_name = "tbl_request_entrance")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub request_entrance_id: Uuid,
    pub request_id: Uuid,
    pub building_id: Uuid,
    #[sea_orm(column_type = "Text")]
    pub proposed_rooms: String,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::tbl_request::Entity",
        from = "Column::RequestId",
        to = "super::tbl_request::Column::RequestId",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    TblRequest,
    #[sea_orm(
        belongs_to = "super::tbl_building::Entity",
        from = "Column::BuildingId",
        to = "super::tbl_building::Column::BuildingId",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    TblBuilding,
}

impl Related<super::tbl_request::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::TblRequest.def()
    }
}

impl Related<super::tbl_building::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::TblBuilding.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
