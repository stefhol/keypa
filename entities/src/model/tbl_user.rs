//! `SeaORM` Entity. Generated by sea-orm-codegen 0.10.6

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(table_name = "tbl_user")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub user_id: Uuid,
    pub name: String,
    pub role_id: Option<Uuid>,
    pub is_active: bool,
    pub tel: Option<String>,
    pub address: Option<String>,
    pub email: String,
    pub picture_url: Option<String>,
    pub password: String,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::tbl_door_to_request_history::Entity")]
    TblDoorToRequestHistory,
    #[sea_orm(has_many = "super::tbl_log::Entity")]
    TblLog,
    #[sea_orm(has_many = "super::tbl_request::Entity")]
    TblRequest,
    #[sea_orm(has_many = "super::tbl_request_comment::Entity")]
    TblRequestComment,
    #[sea_orm(
        belongs_to = "super::tbl_role::Entity",
        from = "Column::RoleId",
        to = "super::tbl_role::Column::RoleId",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    TblRole,
}

impl Related<super::tbl_door_to_request_history::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::TblDoorToRequestHistory.def()
    }
}

impl Related<super::tbl_log::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::TblLog.def()
    }
}

impl Related<super::tbl_request::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::TblRequest.def()
    }
}

impl Related<super::tbl_request_comment::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::TblRequestComment.def()
    }
}

impl Related<super::tbl_role::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::TblRole.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
