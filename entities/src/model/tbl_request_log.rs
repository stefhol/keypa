//! `SeaORM` Entity. Generated by sea-orm-codegen 0.10.6

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(table_name = "tbl_request_log")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub log_id: i64,
    #[sea_orm(column_type = "Text", nullable)]
    pub message: Option<String>,
    pub keycard_history_id: Option<i64>,
    pub door_to_request_history_id: Option<i64>,
    pub changed_at: DateTime,
    pub changed_by: Uuid,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::tbl_door_to_request_history::Entity",
        from = "Column::DoorToRequestHistoryId",
        to = "super::tbl_door_to_request_history::Column::DoorToRequestHistoryId",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    TblDoorToRequestHistory,
    #[sea_orm(
        belongs_to = "super::tbl_keycard_history::Entity",
        from = "Column::KeycardHistoryId",
        to = "super::tbl_keycard_history::Column::KeycardHistoryId",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    TblKeycardHistory,
    #[sea_orm(
        belongs_to = "super::tbl_user::Entity",
        from = "Column::ChangedBy",
        to = "super::tbl_user::Column::UserId",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    TblUser,
}

impl Related<super::tbl_door_to_request_history::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::TblDoorToRequestHistory.def()
    }
}

impl Related<super::tbl_keycard_history::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::TblKeycardHistory.def()
    }
}

impl Related<super::tbl_user::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::TblUser.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
